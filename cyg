#!/bin/bash
# -*- mode: sh; coding: utf-8-unix -*-

# Cygwin の bash.exe の在り処を絶対パスで指定してください
cygsh_path='/mnt/c/gnupack/app/cygwin/cygwin/bin/bash.exe'

source wslcommon
command_name=$(basename "$0")

function usage_exit() {
    cat << EOF >&2
Usage: $command_name command [args]
       $command_name -h
EOF
    exit $1
}

while getopts :h opt; do
    case $opt in
        h)
            usage_exit 0
            ;;
        \?)
            usage_exit 2
            ;;
    esac
done

shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
    usage_exit 2
fi

function message() {
    echo "$command_name: $1" >&2
    exit 1
}

current_wsl_path=$(readlink -m -- "$PWD")
current_win_path=$(winpath "$current_wsl_path")

# WSL path を Windows path に変換できたか？
if [ $? -eq 0 ]; then
    temp_win_path=$(cmd1 /c echo %TEMP%)
    temp_wsl_path=$(wslpath "$temp_win_path")

    process_id_wsl_path=$(mktemp -p "$temp_wsl_path" -t "$command_name.XXXXXXXXXX")
    process_id_win_path=$(winpath "$process_id_wsl_path")

    shell_command_wsl_path=$(mktemp -p "$temp_wsl_path" -t "$command_name.XXXXXXXXXX")
    shell_command_win_path=$(winpath "$shell_command_wsl_path")

    trap 'rm -f "$process_id_wsl_path" "$shell_command_wsl_path"' 0

    quote_pwd=$(printf '%q' "$current_win_path")

    quote_cmd=''
    for arg; do
        quote_cmd+=" $(printf '%q' "$arg")"
    done

    cat << EOF > "$shell_command_wsl_path"
echo \$$ > '$process_id_win_path'
LANG=$LANG
cd $quote_pwd
$quote_cmd
EOF

    # WSL2 では、UNC パスをマウントしているマウントポイント配下がカレントディレクトリの状態で
    # Windows の exe コマンドを実行するとエラー終了する。この対策のため、事前に cd を行う。
    cd

    # Windows 10 1809 以降では、Emacs の shell-mode で exe コマンドを実行できない。 このため、
    # exe コマンド実行時に win コマンドを利用している。

    trap 'trap "" 1 2 3 15; win "$cygsh_path" -l -c "kill -- -"$(cat "$process_id_wsl_path")' 1 2 3 15

    win "$cygsh_path" -l "$shell_command_win_path"
else
    message 'このディレクトリではコマンドを実行できません'
fi
